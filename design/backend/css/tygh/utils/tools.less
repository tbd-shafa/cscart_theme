// Tools
// var(--cs-tablet-breakpoint) + 1px
@media (min-width: 768px) {
    body > .cs-debug-printr {
        margin-left: ~"calc(var(--main-menu-width) + 16px)";
    }
}

.cm-hint {
    color: var(--cs-text-muted-color) !important;
    font-weight: normal;
}

.dl-horizontal-small {
    dt {
        width: 100px;
    }
    dd {
        margin-left: 120px;
    }
}

.text-over {
    overflow: hidden;
    max-width: 600px;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.muted,
.muted a {
    color: var(--cs-text-muted-color);
}
a.muted:hover,
a.muted:focus {
    filter: brightness(120%);
}

// Headings
// -------------------------

h1, h2, h3, h4, h5, h6 {
    small {
      color: var(--cs-placeholder-text);
    }
}

// Horizontal rules
hr {
    border-bottom-color: var(--cs-input-background);
}

// Blockquotes
blockquote {
    border-left-color: var(--cs-hr-border);
    small {
      color: var(--cs-placeholder-text);
    }
  
    // Float right with text-align: right
    &.pull-right {
      border-right-color: var(--cs-hr-border);
    }
}

//
// Accordion
// --------------------------------------------------


// Parent container
// Group == heading + body
.accordion-group {
  border-color: var(--cs-hr-border);
}

// Inner needs the styles because you can't animate properly with any styles on the element
.accordion-inner {
  border-top-color: var(--cs-hr-border);
}

.underline {
    text-decoration: underline;
}

.link--monochrome,
.link--monochrome:hover,
.link--monochrome:focus,
.link--monochrome:active,
.link--monochrome.active {
    color: var(--cs-text-color);
}

.content-variant-wrap .muted {
    display: inline-block;
    text-transform: uppercase;
    margin: 0 10px 0 0;
    line-height: var(--cs-input-height);
    min-width: 100px;
}

.shift-right {
    padding-right: 5px;
}

.shift-left {
    margin-left: 5px;
}

.shift-left.date {
    padding-left: 34px;
}

.shift-top {
    padding-top: 5px;
}

.shift-button {
    padding-bottom: 10px;
}

.dashed-child > *:not(:last-child):after {
    content: 'â€”';
    color: var(--cs-text-color);
}

.slashed-child > *:not(:last-child):after {
    content: '/';
    color: var(--cs-text-color);
}

.spaced-child > *:not(:last-child) {
    margin-right: 10px;
}
.spaced-child > * {
    margin-bottom: 5px;
}

.center {
    text-align: center !important;
}

.left {
    text-align: left;
}

.right {
    text-align: right !important;
}

.top {
    vertical-align: top !important;
}

.vertical-align-middle {
    vertical-align: middle;
}

.hidden {
    display: none;
}

.visibility-hidden {
    visibility: hidden;
}

.hidden-accessible,
.js-tmp-hidden-accessible {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

input.hidden {
    display: none !important;
}

.cs-dark-theme .cs-dark-theme-invert {
    filter: invert(1);
}

.nowrap {
    white-space: nowrap;
}

// var(--cs-large-desktop-breakpoint) + 1px
@media (min-width: 1340px) {
    .nowrap-responsive {
        white-space: nowrap;
    }
}

.wrap {
    word-wrap: break-word;
    word-break: break-all;
}

.wrap-word {
    word-break: break-all;
    word-break: break-word;
    overflow-wrap: anywhere;
}

.wrap-normal {
    white-space: normal;
}

.nobold {
    font-weight: normal !important;
}

.clear {
    clear: both;
}

.t-overflow {
    text-overflow: ellipsis;
}

.strong,
strong {
    font-weight: bold;
}

.text-larger {
    font-size: var(--cs-font-size-large);
}

.uppercase {
    text-transform: uppercase;
}

.shift-control {
    margin-left: 180px;
    padding: 5px 0;
    margin-bottom: 15px;
}

.inline-block {
    display: inline-block;
    vertical-align: top;
}

.inline-block-basic {
    display: inline-block;
}

// Double selectboxes
.chevron-icons {
    padding-top: 71px;
    vertical-align: top;
}

.unedited-element, .undeleted-element {
    cursor: not-allowed;
}

// Cm
.cm-opacity {
    opacity: 0.4;
}

.cm-row-status-d,
.cm-row-status-c,
.cm-row-item .cm-row-status-d,
.cm-row-item .cm-row-status-c {
    .row-status,
    .row-status a,
    .cm-popup-box .dropdown-toggle,
    input,
    select,
    small,
    >span,
    img,
    th {
        color: var(--cs-text-muted-color-more);
    }
    .cm-row-status-d>input[type="checkbox"],
    input[type="radio"],
    [class^="icon-"],
    [class*=" icon-"],
    img {
        opacity: 0.4;
    }
    .caret {
        border-top: 4px solid var(--cs-text-muted-color-more);
    }
}

.cm-row-status-h {
    .row-status,
    .row-status a,
    .cm-popup-box .dropdown-toggle,
    input,
    select {
        color: var(--cs-text-muted-color);
    }
    .caret {
        border-top: 4px solid var(--cs-text-muted-color);
    }
}

// Object statuses
.status-dropdown:hover,
.status-dropdown:focus {
    text-decoration: none;
}

.status-caret {
    transform: translateX(6px);
}

.status--long {
    font-size: ~"calc(var(--cs-base-font-size) - 2px)";
    line-height: ~"calc(var(--cs-base-line-height) - 2px)";
}

// View status - non editable, text display (vendor view)
// Status dropdown - dropdown toggle
// Status link - lists of dropdown links
.view-status--type.view-status:before,
.status-dropdown--type.status-dropdown:before,
.status-link--type.status-link:before { 
    --icon-status: '\25cf';
    content: var(--icon-status);
    padding-right: 6px;
    font-size: var(--cs-font-size-mini);
    color: var(--cs-placeholder-text);
}

.status-link--type.status-link:before { 
    vertical-align: top;
}

// Active (a)
.view-status--type.view-status-a:before,
.status-dropdown--type.status-dropdown-a:before,
.status-link--type.status-link-a:before {
    color: var(--cs-btn-success-background);
}

// Disabled (d)
.view-status--type.view-status-d:before,
.status-dropdown--type.status-dropdown-d:before,
.status-link--type.status-link-d:before {
    color: var(--cs-placeholder-text);
}

// Available (f)
.view-status--type.view-status-f:before,
.status-dropdown--type.status-dropdown-f:before,
.status-link--type.status-link-f:before {
    color: var(--cs-purple);
    opacity: 0.8;
}

// Hidden (h)
.view-status--type.view-status-h:before,
.status-dropdown--type.status-dropdown-h:before,
.status-link--type.status-link-h:before {
    color: var(--cs-btn-info-background);
}

// New object (n)
.view-status--type.view-status-n:before,
.status-dropdown--type.status-dropdown-n:before,
.status-link--type.status-link-n:before {
    color: var(--cs-blue);
}

// Pending (p)
.view-status--type.view-status-p:before,
.status-dropdown--type.status-dropdown-p:before,
.status-link--type.status-link-p:before {
    color: var(--cs-orange);
}

// IE 9
.ie9 {
    /* Fix vertical-align of icons inside sidebar or button in IE9 */
    [class^="icon-"],
    [class*=" icon-"] {
        margin-top: -1px !important;
    }
    .btn {
        line-height: 19px;
    }
    .conditions-tree .conditions-tree-group .btn-link {
        margin-top: 4px;
    }
}

.dropdown-menu.dropdown-menu-to-right {
    left: auto;
    right: 100%;
    margin: 0;
    border-radius: 6px 0 6px 6px;
}

.redactor-editor ol li ol li {
    list-style-type: inherit;
}

.redactor-editor ol li ol li ol li {
    list-style-type: inherit;
}

.cm-table-list-orders {
    margin-bottom: 0px;
}

.cm-scroll-data {
    overflow-y: auto;
    width: 960px;
}

.scroll-data--fullwidth {
    width: 100%;
    max-width: ~"calc(100vw - (16px * 4))";
}

// var(--cs-tablet-breakpoint) + 1px
@media (min-width: 768px) {
    .scroll-data--fullwidth {
        max-width: ~"calc(100vw - (var(--main-menu-width) + 16px * 4 + 16px))";
    }
}

.cm-scroll-horizontal {
    overflow-x: scroll;
}

.cm-block-head-scroll {
    visibility: hidden;
}

.cm-block-elm-head-scroll {
    display: none;
}

.cm-total-scroll {
    display: none;
}

.cm-table-list-data {
    display: grid;
    width: 30%;
}

.payout .status-link-p {
    display: none;
}

.cm-table-thead tr {
    display: block;
}

.cm-table-thead th {
    min-width: 100px;
    box-sizing: border-box;
}

.cm-table-thead th:first-child {
    min-width: 200px;
    box-sizing: border-box;
}

.cm-table-tbody {
    display: block;
    height: 70vh;
    overflow: auto;
    overflow-x: hidden;
}

.cm-table-tbody td:first-child {
    min-width: 200px;
    max-width: 200px;
}

.cm-table-tbody td {
    min-width: 100px;
    max-width: 100px;
    box-sizing: border-box;
}

.tr-color_mark td {
    background-color: var(--cs-table-background-hover);
}

.table-exim li.table-import-field {
    margin-bottom: 10px;
}

.import-field {
    margin-bottom: 0px;
}

.import-label {
    color: var(--cs-text-muted-color);
    margin-bottom: 0px;
}

.vendor-statistics a {
    float: right;
    clear: right;
    display: block;
}

.flex {
    display: flex;
}

.input-append.flex {
    display: flex;
}

.flex-inline {
    display: inline-flex;
}

.flex-wrap {
    flex-wrap: wrap;
}

.flex-vertical-centered {
    display: flex;
    align-items: center;

    &--on-mobile {
        // var(--cs-tablet-breakpoint)
        @media (max-width: 767px) {
            display: flex;
            align-items: center;
        }
    }
}

.flex-space-between {
    justify-content: space-between;
}

.flex-shrink-none {
    flex-shrink: 0;
}

.row-actionable {
    cursor: pointer !important;
}

.row-actionable:hover td {
    background-color: var(--cs-main-color) !important;
    color: var(--cs-content-background);
}

// var(--cs-tablet-breakpoint)
@media (max-width: 767px) {
    .noborder--mobile {
        border: 0 !important;
    }
}

.copy-on-type__target-text-label,
.copy-on-type__target-text {
    vertical-align: middle;
}

.copy-on-type__target-text:not(:empty):after {
    content: '.';
}

.type-error {
    color: var(--cs-error-text) !important;
}

.mobile-visible,
.mobile-visible-inline {
    display: none;
}

// var(--cs-tablet-breakpoint)
@media (max-width: 767px) {
    .mobile-visible-inline {
        display: inline-block;
    }

    .mobile-visible {
        display: block;
    }

    .mobile-hidden {
        display: none;
    }
}

.micro-note {
    color: var(--cs-text-muted-color);
    font-size: 11px;
    line-height: 14px;
}

.manage-tools-list {
    margin-left: 16px;
}

.events-none {
    pointer-events: none;
}



//
// Code (inline and blocK)
// --------------------------------------------------


// Inline and block code styles
code,
pre {
  color: var(--cs-text-color);
}

// Inline code
code {
  color: var(--cs-error-text);
  background-color: var(--cs-form-actions-background);
  border: 1px solid var(--cs-input-border);
}

// Blocks of code
pre {
  background-color: var(--cs-form-actions-background);
  border: 1px solid var(--cs-input-border);
}
